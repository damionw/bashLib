#! /usr/bin/env bash

first_name="${BASH_SOURCE[0]}"
actual_name="$(readlink -f "${first_name}")"
local_path="$(dirname "${actual_name}")"

. "${local_path}/logging"
. "${local_path}/arguments"

list::from_pathvar() {
    eval "$(arguments::formatter "$@")"

    local _separator="${kwargs["separator"]:-:}"
    local _contents="${kwargs["path"]:-${args[0]}}"

    echo "${_contents}" | awk -F"${_separator}" '{for (i=1; i <= NF; ++i) {print $i;}}' | uniq
}

list::to_pathvar() {
    eval "$(arguments::formatter "$@")"

    local _separator="${kwargs["separator"]:-${args[0]:-:}}"
    local _row
    local _sep

    while read _row
    do
        echo -n "${_sep}${_row}"
        _sep="${_separator}"
    done
}

list::filter_path() {
    eval "$(arguments::formatter "$@")"

    local _separator="${kwargs["separator"]:-:}"
    local _contents="${kwargs["path"]:-${args[0]}}"
    local _regex="${kwargs["regex"]:-'*'}"
    local _not="$((echo ${kwargs["negate"]} | egrep -q '^(true|1)$') && echo "-v")"

    list::from_pathvar separator="${_separator}" path="${_contents}" |
    egrep ${_not} "${_regex}" |
    list::to_pathvar separator="${_separator}"
}

list::to_regex() {
    awk 'BEGIN {printf("(");} {printf("%s%s", sep, $0); sep="|";} END {printf(")\n");}'
}

list::range() {
    eval "$(arguments::formatter "$@")"

    local _start="${kwargs["start"]:-${args[1]:-0}}"
    local _stop="${kwargs["stop"]:-${args[0]:-1}}"
    local _step="${kwargs["step"]:-${args[2]:-1}}"

    awk 'END {
        for (i=_start; i < _stop; i += _step) {
            printf("%d\n", i);
        }
    }' _start="${_start}" _stop="${_stop}" _step="${_step}" <<< ""
}

list::addprefix() {
    eval "$(arguments::formatter "$@")"

    local _prefix="${kwargs["prefix"]:-${args[0]:?Not enough parameters for addprefix}}"
    local _value

    while read _value
    do
        test -n "${_value}" && echo "${_prefix}=${_value}"
    done
}

list::enumerate() {
    eval "$(arguments::formatter "$@")"

    local _separator="${kwargs["separator"]:-${args[0]:-" "}}"
    local _index=0 _row

    while read _row
    do
        echo "${_index}${_separator}${_row}"
        ((++_index))
    done
}

list::sentinel() {
    eval "$(arguments::formatter "$@")"

    local _regex="${kwargs["regex"]:-'*'}"
    local _not="$((echo ${kwargs["negate"]} | egrep -q '^(true|1)$') && echo "-v")"
    local _flag= _row=

    while read _row
    do
        (echo "${_row}" | egrep -q ${_not} "${_regex}") && _flag=1
        [ -n "${_flag}" ] && echo "${_row}"
    done
}

list::trim() {
    sed -e 's/\[#].*$//g' -e 's/^[ ]*//g' -e 's/[ ]*$//g' -e '/^$/d'
}

# list::apply() {
#     eval "$(arguments::formatter "$@")"
# 
#     local _command="${kwargs["command"]:-${args[0]:-echo}}"
#     local _row
# 
#     list::trim | while read _row
#     do
#         ${_command} "${_row}"
#     done
# }
